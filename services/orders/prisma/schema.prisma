generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id         String   @id @default(uuid())
  tenantId   String
  channel    String
  externalId String
  status     String   @default("created")
  createdAt  DateTime @default(now())
  items      OrderItem[]
  returns    Return[]

  @@index([tenantId])
  @@index([tenantId, createdAt])
  @@index([tenantId, status])
  @@index([tenantId, channel])
  @@unique([tenantId, channel, externalId])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  sku       String
  quantity  Int

  order Order @relation(fields: [orderId], references: [id])
}

model Return {
  id        String   @id @default(uuid())
  orderId   String
  tenantId  String
  reason    String
  state     String   @default("initiated")
  createdAt DateTime @default(now())

  order Order @relation(fields: [orderId], references: [id])
  @@index([tenantId])
}

model Label {
  id        String   @id @default(uuid())
  tenantId  String
  returnId  String   @unique
  carrier   String
  service   String
  costCents Int
  currency  String
  objectKey String
  createdAt DateTime @default(now())

  @@index([tenantId])
}

model Outbox {
  id          String   @id @default(uuid())
  tenantId    String?
  type        String
  payload     Json
  status      String   @default("pending") // pending|published|failed
  attempts    Int      @default(0)
  publishedAt DateTime?
  createdAt   DateTime @default(now())

  @@index([status, createdAt])
}

model ScanAudit {
  id        String   @id @default(uuid())
  tenantId  String
  returnId  String
  userId    String?
  deviceId  String?
  event     String
  createdAt DateTime @default(now())

  @@index([tenantId, createdAt])
  @@index([returnId])
}
